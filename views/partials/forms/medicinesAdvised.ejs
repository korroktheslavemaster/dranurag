<script type="text/x-handlebars-template" id="medicinesAdvisedTemplate">
  <div class="row-container">
    <div class="form-group row">
      <div class="col-4 pr-0 pr-md-0">
        <div id="scrollable-dropdown-menu">
          <input type="text" class="form-control" id="medicinesAdvisedDrug" name="medicinesAdvisedDrug[]" placeholder="Drug name">
        </div>
        <img class="Typeahead-spinner" src="/img/ellipsis.svg" style="display: inline; display: none; position: absolute; top: 5px; right: 7px; width: 28px; height: 28px">
      </div>
      <div class="col-2 pr-0 pr-md-0">
        <div id="scrollable-dropdown-menu">
          <input type="text" class="form-control" id="medicinesAdvisedFrequency" name="medicinesAdvisedFrequency[]" placeholder="Frequency">
        </div>
      </div>
      <div class="col-2 pr-0 pr-md-0">
        <div id="scrollable-dropdown-menu">
          <input type="text" class="form-control" id="medicinesAdvisedDuration" name="medicinesAdvisedDuration[]" placeholder="Duration">
        </div>
      </div>
      <div class="col-3 pr-0 pr-md-0">
        <div id="scrollable-dropdown-menu">
          <input type="text" class="form-control" id="medicinesAdvisedSpecialAdvice" name="medicinesAdvisedSpecialAdvice[]" placeholder="Special Advice">
        </div>
      </div>
      <div class="col-1 col-auto pl-3 pl-md-0">
        <a href="#" class="btn btn-success pull-right" data-role="add" id="add">
          <i class="fa fa-plus"></i>
        </a>
        <a href="#" class="btn btn-danger pull-right" data-role="remove" id="remove">
          <i class="fa fa-minus"></i>
        </a>
      </div>
    </div>
  </div>  <!-- /div.row-container -->
</script>
<!-- using lodash -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.4/lodash.js"></script>

<script type="text/javascript">
  $.fn.medicinesAdvisedInput = function() {
    const container = this;
    var tmpl = Handlebars.compile($('#medicinesAdvisedTemplate').html())
    // using onemg source
    var drugSrc = new Bloodhound({
      datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
      queryTokenizer: Bloodhound.tokenizers.whitespace,
      // prefetch: 'https://api.drugbankplus.com/v1/us/drug_names?q=tylenol',
      remote: {
        url: '/autocomplete/medicineAdvice/drug?q=%QUERY',
        wildcard: '%QUERY'
      }
    });

    var [frequencySrc, durationSrc, specialAdviceSrc] = 
      ["frequency", "duration", "specialAdvice"]
        .map((str) => {
          return new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.whitespace,
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            prefetch: '/autocomplete/medicineAdvice/' + str + '?_=' + (new Date().getTime()),
          })
        })

    sourceWithDefaults = (src) => {
      return (q, sync) => {
          if (q === '') {
          sync(src.all()); // This is the only change needed to get 'ALL' items as the defaults
        }
        else {
          src.search(q, sync);
        }
      }
    }

    var getNewRow = () => {
      var $jqueryElement = $(tmpl())
      $("#medicinesAdvisedDrug", $jqueryElement).typeahead({
        hint: true,
        highlight: true,
        minLength: 2
      },
      { 
        name: 'drugs',
        display: 'pName',
        source: drugSrc,
        limit: 10,
      }).on('typeahead:asyncrequest', function() {
        $('.Typeahead-spinner', $jqueryElement).show();
      })
      .on('typeahead:asynccancel typeahead:asyncreceive', function() {
        $('.Typeahead-spinner', $jqueryElement).hide();
      });

      _.zip([frequencySrc, durationSrc, specialAdviceSrc], ["Frequency", "Duration", "SpecialAdvice"])
       .forEach(([src, str]) => {
          $("#medicinesAdvised" + str, $jqueryElement).typeahead({
            hint: true,
            highlight: true,
            minLength: 0,
          },
          {
            name: str,
            source: sourceWithDefaults(src),
            limit: 20
          })
       })

      return $jqueryElement
    }
    this.on('click', '#add', function(e) {
      console.log('clicked add on medicinesAdvised')
      e.preventDefault()
      container.prepend(getNewRow())
    })
    this.on('click', '#remove', function(e) {
      e.preventDefault()
      $(this).closest('.row-container').remove();
    })
    // initialize with 3 rows
    this.append(getNewRow())
    this.append(getNewRow())
    this.append(getNewRow())
  }
</script>